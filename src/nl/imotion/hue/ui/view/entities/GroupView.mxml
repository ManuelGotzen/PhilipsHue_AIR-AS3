<?xml version="1.0"?>
<!--
  - Licensed under the MIT license
  -
  - Copyright (c) 2009-2013 Pieter van de Sluis
  -
  - Permission is hereby granted, free of charge, to any person obtaining a copy
  - of this software and associated documentation files (the "Software"), to deal
  - in the Software without restriction, including without limitation the rights
  - to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  - copies of the Software, and to permit persons to whom the Software is
  - furnished to do so, subject to the following conditions:
  -
  - The above copyright notice and this permission notice shall be included in
  - all copies or substantial portions of the Software.
  -
  - THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  - IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  - FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  - AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  - LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  - OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  - THE SOFTWARE.
  -
  - http://code.google.com/p/imotionproductions/
  -->

<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:mx="library://ns.adobe.com/flex/mx" implements="mx.core.IDataRenderer" gap="0" width="100%">

    <s:states>
        <!-- Define the new view states. -->
        <s:State name="collapsed"/>
        <s:State name="expanded"/>
    </s:states>

    <fx:Script><![CDATA[
        import mx.collections.ArrayCollection;

        import nl.imotion.hue.manager.entities.HueGroup;
        import nl.imotion.hue.ui.util.VectorConverter;


        [Bindable]
        private var _group:HueGroup;

        [Bindable]
        private var _lightsCollection:ArrayCollection;


        public function set data( value:Object ):void
        {
            _group = value as HueGroup;

            _lightsCollection = VectorConverter.toArrayCollection( _group.lights );
        }


        public function get data():Object
        {
            return _group;
        }


        private function onArrowClick():void
        {
            toggleState();
        }


        private function toggleState():void
        {
            if ( currentState == "collapsed" )
            {
                currentState = "expanded";
            }
            else
            {
                currentState = "collapsed";
            }
        }
        ]]></fx:Script>

    <s:Group width="100%">
        <s:Rect width="100%" height="100%">
            <s:fill><s:SolidColor color="0x999999" /></s:fill>
        </s:Rect>

        <s:HGroup gap="0" width="100%" paddingLeft="0" paddingRight="20" paddingTop="5" paddingBottom="5" verticalAlign="middle" color="#ffffff">

            <s:Label text.collapsed="►" text.expanded="▼" click="onArrowClick()" width="20" height="100%" verticalAlign="middle" textAlign="center" />

            <s:HGroup gap="20" width="100%" verticalAlign="middle">
                <s:CheckBox selected="@{_group.isOn}" label="{_group.name}" fontWeight="bold" width="75" />

                <s:Label text="Hue" />
                <s:HSlider minimum="0" maximum="0xffff" width="100%" value="@{_group.hue}" stepSize="1" />

                <s:Label text="Saturation" />
                <s:HSlider minimum="0" maximum="0xfe" width="100%" value="@{_group.saturation}" stepSize="1" />

                <s:Label text="Brightness" />
                <s:HSlider minimum="0" maximum="0xfe" width="100%" value="@{_group.brightness}" stepSize="1" />
            </s:HGroup>
        </s:HGroup>
    </s:Group>

    <s:Group width="100%" includeIn="expanded">
        <s:Rect width="100%" height="100%">
            <s:fill><s:SolidColor color="0xeeeeee" /></s:fill>
        </s:Rect>

        <s:DataGroup dataProvider="{_lightsCollection}" itemRenderer="nl.imotion.hue.ui.view.entities.LightView" width="100%">
            <s:layout>
                <s:TileLayout horizontalGap="10" verticalGap="10" paddingLeft="20" paddingRight="20" paddingTop="5" paddingBottom="5" />
            </s:layout>
        </s:DataGroup>
    </s:Group>

</s:VGroup>
